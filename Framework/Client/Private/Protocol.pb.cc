// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protocol {
constexpr S_LOGIN::S_LOGIN(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ilevelcount_(0u){}
struct S_LOGINDefaultTypeInternal {
  constexpr S_LOGINDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_LOGINDefaultTypeInternal() {}
  union {
    S_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_LOGINDefaultTypeInternal _S_LOGIN_default_instance_;
constexpr C_LOGIN::C_LOGIN(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C_LOGINDefaultTypeInternal {
  constexpr C_LOGINDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C_LOGINDefaultTypeInternal() {}
  union {
    C_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C_LOGINDefaultTypeInternal _C_LOGIN_default_instance_;
constexpr S_ENTER_LEVEL::S_ENTER_LEVEL(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ilevelid_(uint64_t{0u}){}
struct S_ENTER_LEVELDefaultTypeInternal {
  constexpr S_ENTER_LEVELDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_ENTER_LEVELDefaultTypeInternal() {}
  union {
    S_ENTER_LEVEL _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_ENTER_LEVELDefaultTypeInternal _S_ENTER_LEVEL_default_instance_;
constexpr C_ENTER_LEVEL::C_ENTER_LEVEL(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ilevelid_(uint64_t{0u}){}
struct C_ENTER_LEVELDefaultTypeInternal {
  constexpr C_ENTER_LEVELDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C_ENTER_LEVELDefaultTypeInternal() {}
  union {
    C_ENTER_LEVEL _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C_ENTER_LEVELDefaultTypeInternal _C_ENTER_LEVEL_default_instance_;
constexpr S_CREATE_OBJECT::S_CREATE_OBJECT(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mworldmatrix_()
  , strname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , strprototypename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iobjectid_(0)
  , iobjecttype_(0u)
  , ilevelindex_(0)
  , ilayerindex_(0)
  , imodeltype_(0u)
  , ianimationindex_(0u){}
struct S_CREATE_OBJECTDefaultTypeInternal {
  constexpr S_CREATE_OBJECTDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_CREATE_OBJECTDefaultTypeInternal() {}
  union {
    S_CREATE_OBJECT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_CREATE_OBJECTDefaultTypeInternal _S_CREATE_OBJECT_default_instance_;
constexpr C_CREATE_OBJECT::C_CREATE_OBJECT(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mworldmatrix_()
  , strname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , strprototypename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iobjectid_(0)
  , iobjecttype_(0u)
  , ilevelindex_(0)
  , ilayerindex_(0)
  , imodeltype_(0u)
  , ianimationindex_(0u){}
struct C_CREATE_OBJECTDefaultTypeInternal {
  constexpr C_CREATE_OBJECTDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C_CREATE_OBJECTDefaultTypeInternal() {}
  union {
    C_CREATE_OBJECT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C_CREATE_OBJECTDefaultTypeInternal _C_CREATE_OBJECT_default_instance_;
constexpr S_DELETE_OBJECT::S_DELETE_OBJECT(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , strprototypename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iobjectid_(0)
  , iobjecttype_(0u)
  , ilevelindex_(0)
  , ilayerindex_(0){}
struct S_DELETE_OBJECTDefaultTypeInternal {
  constexpr S_DELETE_OBJECTDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_DELETE_OBJECTDefaultTypeInternal() {}
  union {
    S_DELETE_OBJECT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_DELETE_OBJECTDefaultTypeInternal _S_DELETE_OBJECT_default_instance_;
constexpr C_DELETE_OBJECT::C_DELETE_OBJECT(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , strprototypename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iobjectid_(0)
  , iobjecttype_(0u)
  , ilevelindex_(0)
  , ilayerindex_(0){}
struct C_DELETE_OBJECTDefaultTypeInternal {
  constexpr C_DELETE_OBJECTDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C_DELETE_OBJECTDefaultTypeInternal() {}
  union {
    C_DELETE_OBJECT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C_DELETE_OBJECTDefaultTypeInternal _C_DELETE_OBJECT_default_instance_;
constexpr S_WORLD_MATRIX::S_WORLD_MATRIX(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matrix_()
  , iobjectid_(0)
  , ilayer_(0){}
struct S_WORLD_MATRIXDefaultTypeInternal {
  constexpr S_WORLD_MATRIXDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_WORLD_MATRIXDefaultTypeInternal() {}
  union {
    S_WORLD_MATRIX _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_WORLD_MATRIXDefaultTypeInternal _S_WORLD_MATRIX_default_instance_;
constexpr S_CHANGE_ANIMATION::S_CHANGE_ANIMATION(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : iobjectid_(0)
  , ilevel_(0)
  , ilayer_(0)
  , ianimindex_(0){}
struct S_CHANGE_ANIMATIONDefaultTypeInternal {
  constexpr S_CHANGE_ANIMATIONDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S_CHANGE_ANIMATIONDefaultTypeInternal() {}
  union {
    S_CHANGE_ANIMATION _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S_CHANGE_ANIMATIONDefaultTypeInternal _S_CHANGE_ANIMATION_default_instance_;
}  // namespace Protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Protocol_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_LOGIN, ilevelcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ENTER_LEVEL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_ENTER_LEVEL, ilevelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ENTER_LEVEL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_ENTER_LEVEL, ilevelid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, iobjecttype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, ilevelindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, ilayerindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, strname_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, strprototypename_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, imodeltype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, ianimationindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CREATE_OBJECT, mworldmatrix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, iobjecttype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, ilevelindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, ilayerindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, strname_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, strprototypename_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, imodeltype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, ianimationindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CREATE_OBJECT, mworldmatrix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, iobjecttype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, ilevelindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, ilayerindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, strname_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_DELETE_OBJECT, strprototypename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, iobjecttype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, ilevelindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, ilayerindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, strname_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_DELETE_OBJECT, strprototypename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_WORLD_MATRIX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_WORLD_MATRIX, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_WORLD_MATRIX, ilayer_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_WORLD_MATRIX, matrix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CHANGE_ANIMATION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CHANGE_ANIMATION, iobjectid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CHANGE_ANIMATION, ilevel_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CHANGE_ANIMATION, ilayer_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CHANGE_ANIMATION, ianimindex_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::S_LOGIN)},
  { 6, -1, sizeof(::Protocol::C_LOGIN)},
  { 11, -1, sizeof(::Protocol::S_ENTER_LEVEL)},
  { 17, -1, sizeof(::Protocol::C_ENTER_LEVEL)},
  { 23, -1, sizeof(::Protocol::S_CREATE_OBJECT)},
  { 37, -1, sizeof(::Protocol::C_CREATE_OBJECT)},
  { 51, -1, sizeof(::Protocol::S_DELETE_OBJECT)},
  { 62, -1, sizeof(::Protocol::C_DELETE_OBJECT)},
  { 73, -1, sizeof(::Protocol::S_WORLD_MATRIX)},
  { 81, -1, sizeof(::Protocol::S_CHANGE_ANIMATION)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_LOGIN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C_LOGIN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_ENTER_LEVEL_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C_ENTER_LEVEL_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_CREATE_OBJECT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C_CREATE_OBJECT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_DELETE_OBJECT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C_DELETE_OBJECT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_WORLD_MATRIX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S_CHANGE_ANIMATION_default_instance_),
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\022\010Protocol\032\nEnum.proto\032\014"
  "Struct.proto\"\036\n\007S_LOGIN\022\023\n\013iLevelCount\030\001"
  " \001(\r\"\t\n\007C_LOGIN\"!\n\rS_ENTER_LEVEL\022\020\n\010iLev"
  "elID\030\001 \001(\004\"!\n\rC_ENTER_LEVEL\022\020\n\010iLevelID\030"
  "\001 \001(\004\"\325\001\n\017S_CREATE_OBJECT\022\021\n\tiObjectID\030\001"
  " \001(\005\022\023\n\013iObjectType\030\002 \001(\r\022\023\n\013iLevelIndex"
  "\030\003 \001(\005\022\023\n\013iLayerIndex\030\004 \001(\005\022\017\n\007strName\030\005"
  " \001(\t\022\030\n\020strPrototypeName\030\006 \001(\t\022\022\n\niModel"
  "Type\030\007 \001(\r\022\027\n\017iAnimationIndex\030\010 \001(\r\022\030\n\014m"
  "WorldMatrix\030\t \003(\002B\002\020\001\"\325\001\n\017C_CREATE_OBJEC"
  "T\022\021\n\tiObjectID\030\001 \001(\005\022\023\n\013iObjectType\030\002 \001("
  "\r\022\023\n\013iLevelIndex\030\003 \001(\005\022\023\n\013iLayerIndex\030\004 "
  "\001(\005\022\017\n\007strName\030\005 \001(\t\022\030\n\020strPrototypeName"
  "\030\006 \001(\t\022\022\n\niModelType\030\007 \001(\r\022\027\n\017iAnimation"
  "Index\030\010 \001(\r\022\030\n\014mWorldMatrix\030\t \003(\002B\002\020\001\"\216\001"
  "\n\017S_DELETE_OBJECT\022\021\n\tiObjectID\030\001 \001(\005\022\023\n\013"
  "iObjectType\030\002 \001(\r\022\023\n\013iLevelIndex\030\003 \001(\005\022\023"
  "\n\013iLayerIndex\030\004 \001(\005\022\017\n\007strName\030\005 \001(\t\022\030\n\020"
  "strPrototypeName\030\006 \001(\t\"\216\001\n\017C_DELETE_OBJE"
  "CT\022\021\n\tiObjectID\030\001 \001(\005\022\023\n\013iObjectType\030\002 \001"
  "(\r\022\023\n\013iLevelIndex\030\003 \001(\005\022\023\n\013iLayerIndex\030\004"
  " \001(\005\022\017\n\007strName\030\005 \001(\t\022\030\n\020strPrototypeNam"
  "e\030\006 \001(\t\"G\n\016S_WORLD_MATRIX\022\021\n\tiObjectID\030\001"
  " \001(\005\022\016\n\006iLayer\030\002 \001(\005\022\022\n\006Matrix\030\003 \003(\002B\002\020\001"
  "\"[\n\022S_CHANGE_ANIMATION\022\021\n\tiObjectID\030\001 \001("
  "\005\022\016\n\006iLevel\030\002 \001(\005\022\016\n\006iLayer\030\003 \001(\005\022\022\n\niAn"
  "imIndex\030\004 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Protocol_2eproto_deps[2] = {
  &::descriptor_table_Enum_2eproto,
  &::descriptor_table_Struct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Protocol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Protocol_2eproto = {
  false, false, 1061, descriptor_table_protodef_Protocol_2eproto, "Protocol.proto", 
  &descriptor_table_Protocol_2eproto_once, descriptor_table_Protocol_2eproto_deps, 2, 10,
  schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
  file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto, file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
namespace Protocol {

// ===================================================================

class S_LOGIN::_Internal {
 public:
};

S_LOGIN::S_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_LOGIN)
}
S_LOGIN::S_LOGIN(const S_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ilevelcount_ = from.ilevelcount_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S_LOGIN)
}

void S_LOGIN::SharedCtor() {
ilevelcount_ = 0u;
}

S_LOGIN::~S_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.S_LOGIN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_LOGIN::ArenaDtor(void* object) {
  S_LOGIN* _this = reinterpret_cast< S_LOGIN* >(object);
  (void)_this;
}
void S_LOGIN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_LOGIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_LOGIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ilevelcount_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_LOGIN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 iLevelCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ilevelcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_LOGIN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_LOGIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 iLevelCount = 1;
  if (this->ilevelcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ilevelcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_LOGIN)
  return target;
}

size_t S_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_LOGIN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 iLevelCount = 1;
  if (this->ilevelcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ilevelcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_LOGIN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  const S_LOGIN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_LOGIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_LOGIN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_LOGIN)
    MergeFrom(*source);
  }
}

void S_LOGIN::MergeFrom(const S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ilevelcount() != 0) {
    _internal_set_ilevelcount(from._internal_ilevelcount());
  }
}

void S_LOGIN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_LOGIN::CopyFrom(const S_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LOGIN::IsInitialized() const {
  return true;
}

void S_LOGIN::InternalSwap(S_LOGIN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ilevelcount_, other->ilevelcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_LOGIN::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class C_LOGIN::_Internal {
 public:
};

C_LOGIN::C_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_LOGIN)
}
C_LOGIN::C_LOGIN(const C_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C_LOGIN)
}

void C_LOGIN::SharedCtor() {
}

C_LOGIN::~C_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.C_LOGIN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_LOGIN::ArenaDtor(void* object) {
  C_LOGIN* _this = reinterpret_cast< C_LOGIN* >(object);
  (void)_this;
}
void C_LOGIN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C_LOGIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_LOGIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_LOGIN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C_LOGIN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_LOGIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_LOGIN)
  return target;
}

size_t C_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_LOGIN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C_LOGIN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  const C_LOGIN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C_LOGIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C_LOGIN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C_LOGIN)
    MergeFrom(*source);
  }
}

void C_LOGIN::MergeFrom(const C_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void C_LOGIN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_LOGIN::CopyFrom(const C_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_LOGIN::IsInitialized() const {
  return true;
}

void C_LOGIN::InternalSwap(C_LOGIN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_LOGIN::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class S_ENTER_LEVEL::_Internal {
 public:
};

S_ENTER_LEVEL::S_ENTER_LEVEL(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_ENTER_LEVEL)
}
S_ENTER_LEVEL::S_ENTER_LEVEL(const S_ENTER_LEVEL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ilevelid_ = from.ilevelid_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S_ENTER_LEVEL)
}

void S_ENTER_LEVEL::SharedCtor() {
ilevelid_ = uint64_t{0u};
}

S_ENTER_LEVEL::~S_ENTER_LEVEL() {
  // @@protoc_insertion_point(destructor:Protocol.S_ENTER_LEVEL)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_ENTER_LEVEL::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_ENTER_LEVEL::ArenaDtor(void* object) {
  S_ENTER_LEVEL* _this = reinterpret_cast< S_ENTER_LEVEL* >(object);
  (void)_this;
}
void S_ENTER_LEVEL::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_ENTER_LEVEL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_ENTER_LEVEL::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_ENTER_LEVEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ilevelid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_ENTER_LEVEL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 iLevelID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ilevelid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_ENTER_LEVEL::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_ENTER_LEVEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 iLevelID = 1;
  if (this->ilevelid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_ilevelid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_ENTER_LEVEL)
  return target;
}

size_t S_ENTER_LEVEL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_ENTER_LEVEL)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 iLevelID = 1;
  if (this->ilevelid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ilevelid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_ENTER_LEVEL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_ENTER_LEVEL)
  GOOGLE_DCHECK_NE(&from, this);
  const S_ENTER_LEVEL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_ENTER_LEVEL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_ENTER_LEVEL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_ENTER_LEVEL)
    MergeFrom(*source);
  }
}

void S_ENTER_LEVEL::MergeFrom(const S_ENTER_LEVEL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_ENTER_LEVEL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ilevelid() != 0) {
    _internal_set_ilevelid(from._internal_ilevelid());
  }
}

void S_ENTER_LEVEL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_ENTER_LEVEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_ENTER_LEVEL::CopyFrom(const S_ENTER_LEVEL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_ENTER_LEVEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ENTER_LEVEL::IsInitialized() const {
  return true;
}

void S_ENTER_LEVEL::InternalSwap(S_ENTER_LEVEL* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ilevelid_, other->ilevelid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_ENTER_LEVEL::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class C_ENTER_LEVEL::_Internal {
 public:
};

C_ENTER_LEVEL::C_ENTER_LEVEL(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_ENTER_LEVEL)
}
C_ENTER_LEVEL::C_ENTER_LEVEL(const C_ENTER_LEVEL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ilevelid_ = from.ilevelid_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C_ENTER_LEVEL)
}

void C_ENTER_LEVEL::SharedCtor() {
ilevelid_ = uint64_t{0u};
}

C_ENTER_LEVEL::~C_ENTER_LEVEL() {
  // @@protoc_insertion_point(destructor:Protocol.C_ENTER_LEVEL)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C_ENTER_LEVEL::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_ENTER_LEVEL::ArenaDtor(void* object) {
  C_ENTER_LEVEL* _this = reinterpret_cast< C_ENTER_LEVEL* >(object);
  (void)_this;
}
void C_ENTER_LEVEL::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C_ENTER_LEVEL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_ENTER_LEVEL::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_ENTER_LEVEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ilevelid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_ENTER_LEVEL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 iLevelID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ilevelid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C_ENTER_LEVEL::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_ENTER_LEVEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 iLevelID = 1;
  if (this->ilevelid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_ilevelid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_ENTER_LEVEL)
  return target;
}

size_t C_ENTER_LEVEL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_ENTER_LEVEL)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 iLevelID = 1;
  if (this->ilevelid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ilevelid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C_ENTER_LEVEL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C_ENTER_LEVEL)
  GOOGLE_DCHECK_NE(&from, this);
  const C_ENTER_LEVEL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C_ENTER_LEVEL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C_ENTER_LEVEL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C_ENTER_LEVEL)
    MergeFrom(*source);
  }
}

void C_ENTER_LEVEL::MergeFrom(const C_ENTER_LEVEL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_ENTER_LEVEL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ilevelid() != 0) {
    _internal_set_ilevelid(from._internal_ilevelid());
  }
}

void C_ENTER_LEVEL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C_ENTER_LEVEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_ENTER_LEVEL::CopyFrom(const C_ENTER_LEVEL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_ENTER_LEVEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_ENTER_LEVEL::IsInitialized() const {
  return true;
}

void C_ENTER_LEVEL::InternalSwap(C_ENTER_LEVEL* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ilevelid_, other->ilevelid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C_ENTER_LEVEL::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// ===================================================================

class S_CREATE_OBJECT::_Internal {
 public:
};

S_CREATE_OBJECT::S_CREATE_OBJECT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mworldmatrix_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_CREATE_OBJECT)
}
S_CREATE_OBJECT::S_CREATE_OBJECT(const S_CREATE_OBJECT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mworldmatrix_(from.mworldmatrix_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strname().empty()) {
    strname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strname(), 
      GetArenaForAllocation());
  }
  strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strprototypename().empty()) {
    strprototypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strprototypename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ianimationindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_CREATE_OBJECT)
}

void S_CREATE_OBJECT::SharedCtor() {
strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ianimationindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
}

S_CREATE_OBJECT::~S_CREATE_OBJECT() {
  // @@protoc_insertion_point(destructor:Protocol.S_CREATE_OBJECT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_CREATE_OBJECT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strprototypename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S_CREATE_OBJECT::ArenaDtor(void* object) {
  S_CREATE_OBJECT* _this = reinterpret_cast< S_CREATE_OBJECT* >(object);
  (void)_this;
}
void S_CREATE_OBJECT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_CREATE_OBJECT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_CREATE_OBJECT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_CREATE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mworldmatrix_.Clear();
  strname_.ClearToEmpty();
  strprototypename_.ClearToEmpty();
  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ianimationindex_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_CREATE_OBJECT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iObjectType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          iobjecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLevelIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ilevelindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayerIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ilayerindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_strname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S_CREATE_OBJECT.strName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strPrototypeName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_strprototypename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S_CREATE_OBJECT.strPrototypeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iModelType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          imodeltype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iAnimationIndex = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ianimationindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float mWorldMatrix = 9 [packed = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_mworldmatrix(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77) {
          _internal_add_mworldmatrix(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_CREATE_OBJECT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_CREATE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_iobjecttype(), target);
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ilevelindex(), target);
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_ilayerindex(), target);
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strname().data(), static_cast<int>(this->_internal_strname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_CREATE_OBJECT.strName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strname(), target);
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strprototypename().data(), static_cast<int>(this->_internal_strprototypename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_CREATE_OBJECT.strPrototypeName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strprototypename(), target);
  }

  // uint32 iModelType = 7;
  if (this->imodeltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_imodeltype(), target);
  }

  // uint32 iAnimationIndex = 8;
  if (this->ianimationindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ianimationindex(), target);
  }

  // repeated float mWorldMatrix = 9 [packed = true];
  if (this->_internal_mworldmatrix_size() > 0) {
    target = stream->WriteFixedPacked(9, _internal_mworldmatrix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_CREATE_OBJECT)
  return target;
}

size_t S_CREATE_OBJECT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_CREATE_OBJECT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float mWorldMatrix = 9 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_mworldmatrix_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strname());
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strprototypename());
  }

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iobjecttype());
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilevelindex());
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayerindex());
  }

  // uint32 iModelType = 7;
  if (this->imodeltype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_imodeltype());
  }

  // uint32 iAnimationIndex = 8;
  if (this->ianimationindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ianimationindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_CREATE_OBJECT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_CREATE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  const S_CREATE_OBJECT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_CREATE_OBJECT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_CREATE_OBJECT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_CREATE_OBJECT)
    MergeFrom(*source);
  }
}

void S_CREATE_OBJECT::MergeFrom(const S_CREATE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_CREATE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mworldmatrix_.MergeFrom(from.mworldmatrix_);
  if (!from.strname().empty()) {
    _internal_set_strname(from._internal_strname());
  }
  if (!from.strprototypename().empty()) {
    _internal_set_strprototypename(from._internal_strprototypename());
  }
  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.iobjecttype() != 0) {
    _internal_set_iobjecttype(from._internal_iobjecttype());
  }
  if (from.ilevelindex() != 0) {
    _internal_set_ilevelindex(from._internal_ilevelindex());
  }
  if (from.ilayerindex() != 0) {
    _internal_set_ilayerindex(from._internal_ilayerindex());
  }
  if (from.imodeltype() != 0) {
    _internal_set_imodeltype(from._internal_imodeltype());
  }
  if (from.ianimationindex() != 0) {
    _internal_set_ianimationindex(from._internal_ianimationindex());
  }
}

void S_CREATE_OBJECT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_CREATE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_CREATE_OBJECT::CopyFrom(const S_CREATE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_CREATE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_CREATE_OBJECT::IsInitialized() const {
  return true;
}

void S_CREATE_OBJECT::InternalSwap(S_CREATE_OBJECT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  mworldmatrix_.InternalSwap(&other->mworldmatrix_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strname_, GetArenaForAllocation(),
      &other->strname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strprototypename_, GetArenaForAllocation(),
      &other->strprototypename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_CREATE_OBJECT, ianimationindex_)
      + sizeof(S_CREATE_OBJECT::ianimationindex_)
      - PROTOBUF_FIELD_OFFSET(S_CREATE_OBJECT, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_CREATE_OBJECT::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[4]);
}

// ===================================================================

class C_CREATE_OBJECT::_Internal {
 public:
};

C_CREATE_OBJECT::C_CREATE_OBJECT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mworldmatrix_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_CREATE_OBJECT)
}
C_CREATE_OBJECT::C_CREATE_OBJECT(const C_CREATE_OBJECT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mworldmatrix_(from.mworldmatrix_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strname().empty()) {
    strname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strname(), 
      GetArenaForAllocation());
  }
  strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strprototypename().empty()) {
    strprototypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strprototypename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ianimationindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C_CREATE_OBJECT)
}

void C_CREATE_OBJECT::SharedCtor() {
strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ianimationindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
}

C_CREATE_OBJECT::~C_CREATE_OBJECT() {
  // @@protoc_insertion_point(destructor:Protocol.C_CREATE_OBJECT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C_CREATE_OBJECT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strprototypename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C_CREATE_OBJECT::ArenaDtor(void* object) {
  C_CREATE_OBJECT* _this = reinterpret_cast< C_CREATE_OBJECT* >(object);
  (void)_this;
}
void C_CREATE_OBJECT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C_CREATE_OBJECT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_CREATE_OBJECT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_CREATE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mworldmatrix_.Clear();
  strname_.ClearToEmpty();
  strprototypename_.ClearToEmpty();
  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ianimationindex_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimationindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_CREATE_OBJECT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iObjectType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          iobjecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLevelIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ilevelindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayerIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ilayerindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_strname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C_CREATE_OBJECT.strName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strPrototypeName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_strprototypename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C_CREATE_OBJECT.strPrototypeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iModelType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          imodeltype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iAnimationIndex = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ianimationindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float mWorldMatrix = 9 [packed = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_mworldmatrix(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77) {
          _internal_add_mworldmatrix(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C_CREATE_OBJECT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_CREATE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_iobjecttype(), target);
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ilevelindex(), target);
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_ilayerindex(), target);
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strname().data(), static_cast<int>(this->_internal_strname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_CREATE_OBJECT.strName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strname(), target);
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strprototypename().data(), static_cast<int>(this->_internal_strprototypename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_CREATE_OBJECT.strPrototypeName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strprototypename(), target);
  }

  // uint32 iModelType = 7;
  if (this->imodeltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_imodeltype(), target);
  }

  // uint32 iAnimationIndex = 8;
  if (this->ianimationindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ianimationindex(), target);
  }

  // repeated float mWorldMatrix = 9 [packed = true];
  if (this->_internal_mworldmatrix_size() > 0) {
    target = stream->WriteFixedPacked(9, _internal_mworldmatrix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_CREATE_OBJECT)
  return target;
}

size_t C_CREATE_OBJECT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_CREATE_OBJECT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float mWorldMatrix = 9 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_mworldmatrix_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strname());
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strprototypename());
  }

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iobjecttype());
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilevelindex());
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayerindex());
  }

  // uint32 iModelType = 7;
  if (this->imodeltype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_imodeltype());
  }

  // uint32 iAnimationIndex = 8;
  if (this->ianimationindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ianimationindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C_CREATE_OBJECT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C_CREATE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  const C_CREATE_OBJECT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C_CREATE_OBJECT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C_CREATE_OBJECT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C_CREATE_OBJECT)
    MergeFrom(*source);
  }
}

void C_CREATE_OBJECT::MergeFrom(const C_CREATE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_CREATE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mworldmatrix_.MergeFrom(from.mworldmatrix_);
  if (!from.strname().empty()) {
    _internal_set_strname(from._internal_strname());
  }
  if (!from.strprototypename().empty()) {
    _internal_set_strprototypename(from._internal_strprototypename());
  }
  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.iobjecttype() != 0) {
    _internal_set_iobjecttype(from._internal_iobjecttype());
  }
  if (from.ilevelindex() != 0) {
    _internal_set_ilevelindex(from._internal_ilevelindex());
  }
  if (from.ilayerindex() != 0) {
    _internal_set_ilayerindex(from._internal_ilayerindex());
  }
  if (from.imodeltype() != 0) {
    _internal_set_imodeltype(from._internal_imodeltype());
  }
  if (from.ianimationindex() != 0) {
    _internal_set_ianimationindex(from._internal_ianimationindex());
  }
}

void C_CREATE_OBJECT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C_CREATE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_CREATE_OBJECT::CopyFrom(const C_CREATE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_CREATE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_CREATE_OBJECT::IsInitialized() const {
  return true;
}

void C_CREATE_OBJECT::InternalSwap(C_CREATE_OBJECT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  mworldmatrix_.InternalSwap(&other->mworldmatrix_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strname_, GetArenaForAllocation(),
      &other->strname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strprototypename_, GetArenaForAllocation(),
      &other->strprototypename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_CREATE_OBJECT, ianimationindex_)
      + sizeof(C_CREATE_OBJECT::ianimationindex_)
      - PROTOBUF_FIELD_OFFSET(C_CREATE_OBJECT, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_CREATE_OBJECT::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[5]);
}

// ===================================================================

class S_DELETE_OBJECT::_Internal {
 public:
};

S_DELETE_OBJECT::S_DELETE_OBJECT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_DELETE_OBJECT)
}
S_DELETE_OBJECT::S_DELETE_OBJECT(const S_DELETE_OBJECT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strname().empty()) {
    strname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strname(), 
      GetArenaForAllocation());
  }
  strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strprototypename().empty()) {
    strprototypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strprototypename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ilayerindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_DELETE_OBJECT)
}

void S_DELETE_OBJECT::SharedCtor() {
strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ilayerindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
}

S_DELETE_OBJECT::~S_DELETE_OBJECT() {
  // @@protoc_insertion_point(destructor:Protocol.S_DELETE_OBJECT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_DELETE_OBJECT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strprototypename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S_DELETE_OBJECT::ArenaDtor(void* object) {
  S_DELETE_OBJECT* _this = reinterpret_cast< S_DELETE_OBJECT* >(object);
  (void)_this;
}
void S_DELETE_OBJECT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_DELETE_OBJECT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_DELETE_OBJECT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_DELETE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strname_.ClearToEmpty();
  strprototypename_.ClearToEmpty();
  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ilayerindex_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_DELETE_OBJECT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iObjectType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          iobjecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLevelIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ilevelindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayerIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ilayerindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_strname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S_DELETE_OBJECT.strName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strPrototypeName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_strprototypename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S_DELETE_OBJECT.strPrototypeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_DELETE_OBJECT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_DELETE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_iobjecttype(), target);
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ilevelindex(), target);
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_ilayerindex(), target);
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strname().data(), static_cast<int>(this->_internal_strname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_DELETE_OBJECT.strName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strname(), target);
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strprototypename().data(), static_cast<int>(this->_internal_strprototypename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_DELETE_OBJECT.strPrototypeName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strprototypename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_DELETE_OBJECT)
  return target;
}

size_t S_DELETE_OBJECT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_DELETE_OBJECT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strName = 5;
  if (!this->strname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strname());
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strprototypename());
  }

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iobjecttype());
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilevelindex());
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayerindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_DELETE_OBJECT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_DELETE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  const S_DELETE_OBJECT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_DELETE_OBJECT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_DELETE_OBJECT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_DELETE_OBJECT)
    MergeFrom(*source);
  }
}

void S_DELETE_OBJECT::MergeFrom(const S_DELETE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_DELETE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.strname().empty()) {
    _internal_set_strname(from._internal_strname());
  }
  if (!from.strprototypename().empty()) {
    _internal_set_strprototypename(from._internal_strprototypename());
  }
  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.iobjecttype() != 0) {
    _internal_set_iobjecttype(from._internal_iobjecttype());
  }
  if (from.ilevelindex() != 0) {
    _internal_set_ilevelindex(from._internal_ilevelindex());
  }
  if (from.ilayerindex() != 0) {
    _internal_set_ilayerindex(from._internal_ilayerindex());
  }
}

void S_DELETE_OBJECT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_DELETE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_DELETE_OBJECT::CopyFrom(const S_DELETE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_DELETE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_DELETE_OBJECT::IsInitialized() const {
  return true;
}

void S_DELETE_OBJECT::InternalSwap(S_DELETE_OBJECT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strname_, GetArenaForAllocation(),
      &other->strname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strprototypename_, GetArenaForAllocation(),
      &other->strprototypename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_DELETE_OBJECT, ilayerindex_)
      + sizeof(S_DELETE_OBJECT::ilayerindex_)
      - PROTOBUF_FIELD_OFFSET(S_DELETE_OBJECT, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_DELETE_OBJECT::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[6]);
}

// ===================================================================

class C_DELETE_OBJECT::_Internal {
 public:
};

C_DELETE_OBJECT::C_DELETE_OBJECT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_DELETE_OBJECT)
}
C_DELETE_OBJECT::C_DELETE_OBJECT(const C_DELETE_OBJECT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strname().empty()) {
    strname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strname(), 
      GetArenaForAllocation());
  }
  strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_strprototypename().empty()) {
    strprototypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strprototypename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ilayerindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C_DELETE_OBJECT)
}

void C_DELETE_OBJECT::SharedCtor() {
strname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
strprototypename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ilayerindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
}

C_DELETE_OBJECT::~C_DELETE_OBJECT() {
  // @@protoc_insertion_point(destructor:Protocol.C_DELETE_OBJECT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C_DELETE_OBJECT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  strprototypename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C_DELETE_OBJECT::ArenaDtor(void* object) {
  C_DELETE_OBJECT* _this = reinterpret_cast< C_DELETE_OBJECT* >(object);
  (void)_this;
}
void C_DELETE_OBJECT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C_DELETE_OBJECT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_DELETE_OBJECT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_DELETE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strname_.ClearToEmpty();
  strprototypename_.ClearToEmpty();
  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ilayerindex_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayerindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_DELETE_OBJECT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 iObjectType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          iobjecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLevelIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ilevelindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayerIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ilayerindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_strname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C_DELETE_OBJECT.strName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string strPrototypeName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_strprototypename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C_DELETE_OBJECT.strPrototypeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C_DELETE_OBJECT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_DELETE_OBJECT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_iobjecttype(), target);
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ilevelindex(), target);
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_ilayerindex(), target);
  }

  // string strName = 5;
  if (!this->strname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strname().data(), static_cast<int>(this->_internal_strname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_DELETE_OBJECT.strName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strname(), target);
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strprototypename().data(), static_cast<int>(this->_internal_strprototypename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_DELETE_OBJECT.strPrototypeName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strprototypename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_DELETE_OBJECT)
  return target;
}

size_t C_DELETE_OBJECT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_DELETE_OBJECT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strName = 5;
  if (!this->strname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strname());
  }

  // string strPrototypeName = 6;
  if (!this->strprototypename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strprototypename());
  }

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // uint32 iObjectType = 2;
  if (this->iobjecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iobjecttype());
  }

  // int32 iLevelIndex = 3;
  if (this->ilevelindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilevelindex());
  }

  // int32 iLayerIndex = 4;
  if (this->ilayerindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayerindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C_DELETE_OBJECT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C_DELETE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  const C_DELETE_OBJECT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C_DELETE_OBJECT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C_DELETE_OBJECT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C_DELETE_OBJECT)
    MergeFrom(*source);
  }
}

void C_DELETE_OBJECT::MergeFrom(const C_DELETE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_DELETE_OBJECT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.strname().empty()) {
    _internal_set_strname(from._internal_strname());
  }
  if (!from.strprototypename().empty()) {
    _internal_set_strprototypename(from._internal_strprototypename());
  }
  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.iobjecttype() != 0) {
    _internal_set_iobjecttype(from._internal_iobjecttype());
  }
  if (from.ilevelindex() != 0) {
    _internal_set_ilevelindex(from._internal_ilevelindex());
  }
  if (from.ilayerindex() != 0) {
    _internal_set_ilayerindex(from._internal_ilayerindex());
  }
}

void C_DELETE_OBJECT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C_DELETE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_DELETE_OBJECT::CopyFrom(const C_DELETE_OBJECT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_DELETE_OBJECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_DELETE_OBJECT::IsInitialized() const {
  return true;
}

void C_DELETE_OBJECT::InternalSwap(C_DELETE_OBJECT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strname_, GetArenaForAllocation(),
      &other->strname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strprototypename_, GetArenaForAllocation(),
      &other->strprototypename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_DELETE_OBJECT, ilayerindex_)
      + sizeof(C_DELETE_OBJECT::ilayerindex_)
      - PROTOBUF_FIELD_OFFSET(C_DELETE_OBJECT, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_DELETE_OBJECT::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[7]);
}

// ===================================================================

class S_WORLD_MATRIX::_Internal {
 public:
};

S_WORLD_MATRIX::S_WORLD_MATRIX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  matrix_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_WORLD_MATRIX)
}
S_WORLD_MATRIX::S_WORLD_MATRIX(const S_WORLD_MATRIX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      matrix_(from.matrix_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ilayer_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayer_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_WORLD_MATRIX)
}

void S_WORLD_MATRIX::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ilayer_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayer_));
}

S_WORLD_MATRIX::~S_WORLD_MATRIX() {
  // @@protoc_insertion_point(destructor:Protocol.S_WORLD_MATRIX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_WORLD_MATRIX::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_WORLD_MATRIX::ArenaDtor(void* object) {
  S_WORLD_MATRIX* _this = reinterpret_cast< S_WORLD_MATRIX* >(object);
  (void)_this;
}
void S_WORLD_MATRIX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_WORLD_MATRIX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_WORLD_MATRIX::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_WORLD_MATRIX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matrix_.Clear();
  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ilayer_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ilayer_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_WORLD_MATRIX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ilayer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float Matrix = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_matrix(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29) {
          _internal_add_matrix(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_WORLD_MATRIX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_WORLD_MATRIX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // int32 iLayer = 2;
  if (this->ilayer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_ilayer(), target);
  }

  // repeated float Matrix = 3 [packed = true];
  if (this->_internal_matrix_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_matrix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_WORLD_MATRIX)
  return target;
}

size_t S_WORLD_MATRIX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_WORLD_MATRIX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float Matrix = 3 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_matrix_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // int32 iLayer = 2;
  if (this->ilayer() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayer());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_WORLD_MATRIX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_WORLD_MATRIX)
  GOOGLE_DCHECK_NE(&from, this);
  const S_WORLD_MATRIX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_WORLD_MATRIX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_WORLD_MATRIX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_WORLD_MATRIX)
    MergeFrom(*source);
  }
}

void S_WORLD_MATRIX::MergeFrom(const S_WORLD_MATRIX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_WORLD_MATRIX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matrix_.MergeFrom(from.matrix_);
  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.ilayer() != 0) {
    _internal_set_ilayer(from._internal_ilayer());
  }
}

void S_WORLD_MATRIX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_WORLD_MATRIX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_WORLD_MATRIX::CopyFrom(const S_WORLD_MATRIX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_WORLD_MATRIX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_WORLD_MATRIX::IsInitialized() const {
  return true;
}

void S_WORLD_MATRIX::InternalSwap(S_WORLD_MATRIX* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  matrix_.InternalSwap(&other->matrix_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_WORLD_MATRIX, ilayer_)
      + sizeof(S_WORLD_MATRIX::ilayer_)
      - PROTOBUF_FIELD_OFFSET(S_WORLD_MATRIX, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_WORLD_MATRIX::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[8]);
}

// ===================================================================

class S_CHANGE_ANIMATION::_Internal {
 public:
};

S_CHANGE_ANIMATION::S_CHANGE_ANIMATION(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_CHANGE_ANIMATION)
}
S_CHANGE_ANIMATION::S_CHANGE_ANIMATION(const S_CHANGE_ANIMATION& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iobjectid_, &from.iobjectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ianimindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimindex_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S_CHANGE_ANIMATION)
}

void S_CHANGE_ANIMATION::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iobjectid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ianimindex_) -
    reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimindex_));
}

S_CHANGE_ANIMATION::~S_CHANGE_ANIMATION() {
  // @@protoc_insertion_point(destructor:Protocol.S_CHANGE_ANIMATION)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void S_CHANGE_ANIMATION::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_CHANGE_ANIMATION::ArenaDtor(void* object) {
  S_CHANGE_ANIMATION* _this = reinterpret_cast< S_CHANGE_ANIMATION* >(object);
  (void)_this;
}
void S_CHANGE_ANIMATION::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S_CHANGE_ANIMATION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_CHANGE_ANIMATION::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_CHANGE_ANIMATION)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iobjectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ianimindex_) -
      reinterpret_cast<char*>(&iobjectid_)) + sizeof(ianimindex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_CHANGE_ANIMATION::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iobjectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ilevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iLayer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ilayer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 iAnimIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ianimindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S_CHANGE_ANIMATION::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_CHANGE_ANIMATION)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_iobjectid(), target);
  }

  // int32 iLevel = 2;
  if (this->ilevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_ilevel(), target);
  }

  // int32 iLayer = 3;
  if (this->ilayer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ilayer(), target);
  }

  // int32 iAnimIndex = 4;
  if (this->ianimindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_ianimindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_CHANGE_ANIMATION)
  return target;
}

size_t S_CHANGE_ANIMATION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_CHANGE_ANIMATION)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 iObjectID = 1;
  if (this->iobjectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iobjectid());
  }

  // int32 iLevel = 2;
  if (this->ilevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilevel());
  }

  // int32 iLayer = 3;
  if (this->ilayer() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ilayer());
  }

  // int32 iAnimIndex = 4;
  if (this->ianimindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ianimindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S_CHANGE_ANIMATION::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S_CHANGE_ANIMATION)
  GOOGLE_DCHECK_NE(&from, this);
  const S_CHANGE_ANIMATION* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S_CHANGE_ANIMATION>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S_CHANGE_ANIMATION)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S_CHANGE_ANIMATION)
    MergeFrom(*source);
  }
}

void S_CHANGE_ANIMATION::MergeFrom(const S_CHANGE_ANIMATION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_CHANGE_ANIMATION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iobjectid() != 0) {
    _internal_set_iobjectid(from._internal_iobjectid());
  }
  if (from.ilevel() != 0) {
    _internal_set_ilevel(from._internal_ilevel());
  }
  if (from.ilayer() != 0) {
    _internal_set_ilayer(from._internal_ilayer());
  }
  if (from.ianimindex() != 0) {
    _internal_set_ianimindex(from._internal_ianimindex());
  }
}

void S_CHANGE_ANIMATION::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S_CHANGE_ANIMATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_CHANGE_ANIMATION::CopyFrom(const S_CHANGE_ANIMATION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_CHANGE_ANIMATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_CHANGE_ANIMATION::IsInitialized() const {
  return true;
}

void S_CHANGE_ANIMATION::InternalSwap(S_CHANGE_ANIMATION* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_CHANGE_ANIMATION, ianimindex_)
      + sizeof(S_CHANGE_ANIMATION::ianimindex_)
      - PROTOBUF_FIELD_OFFSET(S_CHANGE_ANIMATION, iobjectid_)>(
          reinterpret_cast<char*>(&iobjectid_),
          reinterpret_cast<char*>(&other->iobjectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_CHANGE_ANIMATION::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::S_LOGIN* Arena::CreateMaybeMessage< ::Protocol::S_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_LOGIN* Arena::CreateMaybeMessage< ::Protocol::C_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_ENTER_LEVEL* Arena::CreateMaybeMessage< ::Protocol::S_ENTER_LEVEL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_ENTER_LEVEL >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_ENTER_LEVEL* Arena::CreateMaybeMessage< ::Protocol::C_ENTER_LEVEL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_ENTER_LEVEL >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_CREATE_OBJECT* Arena::CreateMaybeMessage< ::Protocol::S_CREATE_OBJECT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_CREATE_OBJECT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_CREATE_OBJECT* Arena::CreateMaybeMessage< ::Protocol::C_CREATE_OBJECT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_CREATE_OBJECT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_DELETE_OBJECT* Arena::CreateMaybeMessage< ::Protocol::S_DELETE_OBJECT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_DELETE_OBJECT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_DELETE_OBJECT* Arena::CreateMaybeMessage< ::Protocol::C_DELETE_OBJECT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_DELETE_OBJECT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_WORLD_MATRIX* Arena::CreateMaybeMessage< ::Protocol::S_WORLD_MATRIX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_WORLD_MATRIX >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_CHANGE_ANIMATION* Arena::CreateMaybeMessage< ::Protocol::S_CHANGE_ANIMATION >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_CHANGE_ANIMATION >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
